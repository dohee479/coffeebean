<?xml version="1.0" encoding="euc-kr" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycompany.webapp.dao.BasketItemsDao">

	<!-- 사용자 자신의 장바구니 목록 불러오기-->
	<!-- 사용자에게 표시되는 화면을 위한 SQL로 사진, 가격이 모두 표시되어야 함 -->
	<!-- 장바구니 테이블의 item_id와 상품테이블의 item_id를 기준으로 조인하여 상품의 이름과, 가격, 사진이름을 불러옴 -->
	<select id="selectAll" parameterType="string" resultType="basketItem">
		select 
			basket_item_id, 
			users_user_id, 
			Products_product_id, 
			basket_volume,
			basket_grind, 
			basket_product_count, 
			products_product_title, 
			products_product_price, 
			products_product_imgonmae, 
			products_product_imgsnmae, 
			products_product_imgtype
			
		from basket_items, products
		where basket_items.products_product_id = products.product_id
	</select>
	
	<!-- 장바구니에 담긴 상품 하나를 가져오는 SQL  -->
	<!-- 설계한 기능상 필요 없어 보임 -->
	<select id="selectByBasketItemId" parameterType="int" resultType="basketItem">
		select
			basket_item_id, 
			users_user_id, 
			Products_product_id, 
			basket_volume,
			basket_grind, 
			basket_product_count
		from basket_items
		where basket_item_id = #{basket_item_id}
	</select>
	
	
	<!-- 찜하기 목록에서 여러개의 상품을 한꺼번에 장바구니에 추가할 수 있음
	 -->
	<insert id="insert" parameterType="java.util.List">
		insert into basket_items
			(
				basket_item_id, 
				users_user_id, 
				Products_product_id, 
				basket_volume,
				basket_grind, 
				basket_product_count
			)
			values
			(
			<foreach collection="list" item="BasketItem" separator=",">
				#{BasketItem.basket_item_id}
				, #{BasketItem.users_user_id}
				, #{BasketItem.products_product_id}
				, #{BasketItem.basket_volume}
				, #{BasketItem.basket_grind}
				, #{BasketItem.basket_prdouct_count}
			</foreach>
			)
	</insert>
	
	<update id="update" parameterType="BasketItem">
		update basket_items set
		basket_volume = #{basket_volume},
		basket_grind = #{basket_grind}, 
		basket_product_count = #{basket_product_count}
		where basket_item_id = #{basket_item_id}
	</update>
	
	<!-- 장바구니에서 하나의 아이템을 삭제함 -->
	<delete id="deleteByBasketItemId" parameterType="int">
		delete from baket_items
		where basket_item_id = #{basket_item_id}
	</delete>
</mapper>