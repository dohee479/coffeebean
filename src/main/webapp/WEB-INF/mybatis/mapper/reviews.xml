<?xml version="1.0" encoding="euc-kr" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ReviewsDao">
	<insert id="insert" parameterType="review">
		<selectKey keyProperty="review_id" resultType="int" order="BEFORE">
			select seq_review_id.nextval from dual
		</selectKey>
		<if test="review_attachoname == null">
			insert into reviews
			(review_id, review_title, review_grade, review_content, review_date, users_user_id, order_product_id, products_product_id)
			values(#{review_id}, #{review_title}, #{review_grade}, #{review_content}, to_char(sysdate, 'yyyy/mm/dd hh24:mi:ss'), #{users_user_id}, #{order_product_id}, #{products_product_id})
		</if>
		<if test="review_attachoname != null">
			insert into reviews
			values(#{review_id}, #{review_title}, #{review_grade}, #{review_content}, #{review_attachoname}, #{review_attachsname}, #{review_attachtype}, to_char(sysdate, 'yyyy/mm/dd hh24:mi:ss'), #{users_user_id}, #{order_product_id}, #{products_product_id})		
		</if>
	</insert>
	
	<update id="update" parameterType="review">
		update reviews set
			review_title = #{review_title},
			review_content = #{review_content},
			review_attachoname = #{review_attachoname},
			review_attachsname = #{review_attachsname},
			review_attachtype = #{review_attachtype},
			review_date = to_char(sysdate, 'yyyy/mm/dd hh24:mi:ss')
		where review_id = #{review_id}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from reviews
		where review_id = #{review_id}
	</delete>
	
	<select id="selectByProductId" parameterType="int" resultType="review">
		select 
			review_id, review_title, review_grade, review_content, 
			review_attachoname, review_attachsname, review_attachtype, to_date(review_date, 'yyyy/mm/dd hh24:mi:ss'), users_user_id, order_product_id, products_product_id
		from reviews
		where products_product_id = #{products_product_id}
		order by to_date(review_date, 'yyyy/mm/dd hh24:mi:ss') desc
	</select>
	
	<select id="selectByUserId" parameterType="string" resultType="review">
		select 
			review_id, review_title, review_grade, review_content, 
			review_attachoname, review_attachsname, review_attachtype, to_date(review_date, 'yyyy/mm/dd hh24:mi:ss'), users_user_id, order_product_id, products_product_id
		from reviews
		where users_user_id = #{user_Id}
		order by to_date(review_date, 'yyyy/mm/dd hh24:mi:ss') desc
	</select>
</mapper>