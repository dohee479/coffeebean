<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


   <!-- 보안을 체크할 필요가 없는 경로 설정 -->
   <security:http pattern="/resources/**" security="none"/>
   
   <!-- 보안 필터 체인(프로세싱) 설정 -->
   <security:http>
      <!-- 요청 경로 체크 -->
      <security:intercept-url pattern="/order/**" access="hasRole('ROLE_USER')"/>
      <security:intercept-url pattern="/mypage/**" access="hasRole('ROLE_USER')"/>
      <security:intercept-url pattern="/**" access="permitAll"/>
      
      <!-- 로그인/로그아웃 설정 -->
      <security:form-login login-page="/user/login"
                      username-parameter="user_id"
                      password-parameter="user_password"
                      login-processing-url="/login"
                      authentication-failure-url="/user/login"
                      authentication-success-handler-ref="authSuccessHandler"
                      authentication-failure-handler-ref="authFailureHandler"/>
      
      <!-- <security:csrf disabled="true"/> -->
      
      <!-- 로그아웃도 POST 방식으로 요청해야함 -->
      <security:logout logout-url="/logout"
      success-handler-ref="authLogoutSuccessHandler" invalidate-session="false"/>
      
      <!-- 로그인 중복 처리 설정 -->
      <security:session-management>
         <!-- 기존 브라우저는 강제 아웃, 다른 브라우저는 로그인 -->
         <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/user/login"/>
         
         <!-- 기존 브라우저는 로그인 유지, 다른 브라우저는 여러 메시지 출력 -->
         <!-- <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/> -->
         
      </security:session-management>
      
      <!-- 403에러 발생할때 페이지 -->
      <!-- <security:access-denied-handler error-page="/exam08/error403"/> -->
      
      
   </security:http>

   <!-- 사용자 인증 처리를 위한 설정 (DB 테이블 관련) -->
   <security:authentication-manager>
      <security:authentication-provider ref="daoAuthenticationProvider"/>
   </security:authentication-manager>
   
   <bean id="daoAuthenticationProvider"
            class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
      <property name="passwordEncoder" ref="bCryptPasswordEncoder"/>
      <property name="userDetailsService" ref="jdbcUserService"/>
      <property name="authoritiesMapper" ref="roleHierarchyAuthoritiesMapper"/>
   </bean>
   
   <bean id="bCryptPasswordEncoder"
   class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
   
   <security:jdbc-user-service id="jdbcUserService"
         data-source-ref="dataSource"
         users-by-username-query="select user_id, user_password, user_enabled from users where user_id=?"
         authorities-by-username-query="select user_id, user_authority from users where user_id=?"/>
                                             
   <bean id="roleHierarchyAuthoritiesMapper" 
      class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
      <constructor-arg>
         <bean class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
            <property name="hierarchy">
               <value>
                  ROLE_ADMIN > ROLE_MANAGER
                  ROLE_MANAGER > ROLE_USER
               </value>
            </property>
         </bean>
      </constructor-arg>
   </bean>
   
   <!-- 로그인 성공했을 때와 실패했을 때 콜백되는 객체 설정 -->
   <bean id="authSuccessHandler"
      class="com.mycompany.webapp.security.AuthSuccessHandler"></bean>
   <bean id="authFailureHandler"
      class="com.mycompany.webapp.security.AuthFailureHandler">
      <property name="defaultFailureUrl" value="/user/login"></property>
   </bean>
   <bean id="authLogoutSuccessHandler" 
   		class="com.mycompany.webapp.security.AuthLogoutSuccessHandler"></bean>
</beans>























